# https://github.com/bitnami/charts/blob/main/bitnami/keycloak/values.yaml

# helm --kubeconfig .\kube_config_cluster-cloud.yml upgrade --install  -n keycloak keycloak oci://registry-1.docker.io/bitnamicharts/keycloak -f .\helm\keycloak.yml


## @param production Run Keycloak in production mode. TLS configuration is required except when using proxy=edge.
##
production: true

## Bitnami Keycloak image version
## ref: https://hub.docker.com/r/bitnami/keycloak/tags/
## @param image.registry [default: REGISTRY_NAME] Keycloak image registry
## @param image.repository [default: REPOSITORY_NAME/keycloak] Keycloak image repository
## @skip image.tag Keycloak image tag (immutable tags are recommended)
## @param image.digest Keycloak image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy Keycloak image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
## @param image.debug Specify if debug logs should be enabled
##
image:
  registry: docker.io
  repository: bitnami/keycloak
  tag: 22.0.5-debian-11-r4

## HTTPS settings
## ref: https://github.com/bitnami/containers/tree/main/bitnami/keycloak#tls-encryption
##
tls:
  ## @param tls.enabled Enable TLS encryption. Required for HTTPs traffic.
  ##
  enabled: true
  ## @param tls.autoGenerated Generate automatically self-signed TLS certificates. Currently only supports PEM certificates
  ##
  autoGenerated: true

# Pod resource requests and limits
resources:
  requests:
    cpu: "500m"
    memory: "1024Mi"
  limits:
    cpu: "500m"
    memory: "1024Mi"

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: le-http-auth
    ## Resolve HTTP 502 error using ingress-nginx:
    ## See https://www.ibm.com/support/pages/502-error-ingress-keycloak-response
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k

  ## @param ingress.hostname Default host for the ingress record (evaluated as template)
  ##
  hostname: keycloak.example.com

  ## @param ingress.servicePort Backend service port to use
  ## Default is http. Alternative is https.
  ##
  servicePort: http

  ## @param ingress.path [string] Default path for the ingress record (evaluated as template)
  ##
  # path: '/'

  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" (tpl .Values.ingress.hostname .) }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: true

## @param httpRelativePath Set the path relative to '/' for serving resources. Useful if you are migrating from older version which were using '/auth/'
## ref: https://www.keycloak.org/migration/migrating-to-quarkus#_default_context_path_changed
##
# httpRelativePath: "/auth/"

## @param extraEnvVars Extra environment variables to be set on Keycloak container
extraEnvVars:
  - name: KC_HOSTNAME
    value: "keycloak.example.com"
  # - name: KC_HOSTNAME_URL
  #   value: "https://keycloak.example.com"
  - name: KC_HOSTNAME_ADMIN_URL
    value: "https://keycloak.example.com"

